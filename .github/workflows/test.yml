name: Test & Lint

on:
  - push

defaults:
  run:
    shell: sh

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-18.04
          - ubuntu-16.04
          - macos-latest

        python-version:
          - '3.8'
          - '3.7'
          - '3.6'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # note: IFF running on Windows...
      #
      # - name: Set up console (Windows)
      #   if: runner.os == 'Windows'
      #   run: echo "PYTHONIOENCODING=UTF-8" >> $GITHUB_ENV

      - name: Determine pip cache path
        id: pip-cache
        run: echo ::set-output name=dir::$(pip cache dir)

      - name: Set up pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-test-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-test-
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
            ${{ runner.os }}-${{ matrix.python-version }}-
            ${{ runner.os }}-

      - name: Ensure libpcap (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get install libpcap-dev

      - name: Ensure argp (macOS)
        if: runner.os == 'macOS'
        run: brew install argp-standalone

      - name: Install tox
        run: python -m pip install $(grep tox setup.py | tr -d "',")

      - name: Test
        env:
          PY_VERSION: ${{ matrix.python-version }}
        run: tox -e "py${PY_VERSION//.}"
        shell: bash

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Determine pip cache path
        id: pip-cache
        run: echo ::set-output name=dir::$(pip cache dir)

      - name: Set up pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-3.8-pip-lint-${{ hashFiles('setup.*') }}
          restore-keys: |
            ${{ runner.os }}-3.8-pip-lint-
            ${{ runner.os }}-3.8-pip-
            ${{ runner.os }}-3.8-
            ${{ runner.os }}-

      - name: Install tox
        run: python -m pip install $(grep tox setup.py | tr -d "',")

      - name: Lint
        run: tox -e lint
